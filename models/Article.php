<?php

namespace app\models;

use function alias;
use app\traits\ImageTrait;
use function date;
use const false;
use Yii;

/**
 * This is the model class for table "articles".
 *
 * @property int $id
 * @property string $title
 * @property string $description
 * @property string $content
 * @property string $date
 * @property string $image
 * @property int $viewed
 * @property int $user_id
 * @property int $status
 * @property int $category_id
 */
class Article extends \yii\db\ActiveRecord
{
    use ImageTrait;

    public $image_path;
    public $preview;

    const STATUS_CREATED = 0;
    const STATUS_PUBLISHED = 1;

    public function beforeSave($insert)
    {
        $this->user_id = Yii::$app->user->id;
        $this->alias = alias($this->title);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterFind()
    {
        $this->image_path = '@web/' . $this->buildFilePath('article', $this->image);
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'articles';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['status'], 'integer', 'min' => self::STATUS_CREATED, 'max' => self::STATUS_PUBLISHED],
            [['status'], 'default', 'value' =>  self::STATUS_CREATED],
            [['title', 'description', 'content'], 'string'],
            [['date'], 'default', 'value' => date('Y-m-d')],
            [['viewed'], 'default', 'value' => 0],
            [['preview'], 'file', 'extensions' => 'png,jpg'],
            [['category_id'], 'integer'],
            [['category_id'], 'exist', 'targetRelation' => 'category'
                /*'targetClass' => Article::class,
                'targetAttribute' => ['category_id' => 'id']*/
            ],
            [['like'], 'integer'],
            [['like'], 'default', 'value' =>  0],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Заголовок',
            'description' => 'Описание',
            'content' => 'Содержание',
            'date' => 'Дата создания',
            'image' => 'Изображение',
//            'viewed' => 'Viewed',
//            'user_id' => 'User ID',
//            'status' => 'Status',
            'category_id' => 'Категория',
        ];
    }

   public function review()
   {
       $this->viewed += 1;
       $this->save(false);
   }

   public function like()
   {
       $this->like += 1;
       $this->save(false);
   }

   public function unlike()
   {
       $this->like -= 1;
       $this->save(false);
   }

   public function publish()
   {
       $this->status = !$this->status;
       $this->save(false);
   }

   public function getCategory()
   {
       return $this->hasOne(Category::class, ['id' => 'category_id']);
   }

   public function getUser()
   {
       return $this->hasOne(User::class, ['id' => 'user_id']);
   }

   public function getComments()
   {
       return $this->hasMany(Comment::class, ['article_id' => 'id']);
   }

    public function getCommentsCount()
    {
        return $this->getComments()->count();
    }
}
