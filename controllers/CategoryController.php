<?php

namespace app\controllers;

use function alias;
use app\models\Article;
use app\models\Category;
use yii\data\Pagination;
use yii\web\Controller;

class CategoryController extends Controller
{
    public function beforeAction($action)
    {
        $categories = [];
        $element_number = 0;
        foreach (Category::find()->asArray()->limit(6)->all() as $key => $category) {
            if ($key != 0 && $key % 3 == 0) {
                ++$element_number;
            }
            $categories[$element_number][] = $category;
        }
        $this->view->params['category'] = $categories;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionView($alias)
    {
        $category = Category::find()->where(['alias' => $alias])->limit(1)->one();
        $this->view->title = $category->title;
        $query = Article::find()->where(['category_id' => $category->id, 'status' => Article::STATUS_PUBLISHED]);
        $countQuery = clone $query;
        $pages = new Pagination([
            'totalCount' => $countQuery->count(),
            'pageSize' => 1,
            'pageSizeParam' => false
        ]);
        $models = $query->offset($pages->offset)
            ->limit($pages->limit)
            ->all();

        return $this->render('view', [
            'models' => $models,
            'pages' => $pages,
        ]);
    }
}